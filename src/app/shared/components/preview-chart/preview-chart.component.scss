$primaryColor : #3f51b5;
$accentColor : #ff4081;

$configs: (
	chart-one: (
		svgSize: 100px,
		percentage: 25,
		strokeWidth: 1px,
		backgroundColor: #305556,
		foregroundColor: #79be9b,
		labelColor: #c6e8d7,
		labelFontSize: 2.5rem,
		duration: 3s,
		animationDelay: 1s
	),
	chart-two: (
		svgSize: 100px,
		percentage: 50,
		strokeWidth: 15px,
		backgroundColor: #305556,
		foregroundColor: #d0f09e,
		labelColor: #c6e8d7,
		labelFontSize: 2.5rem,
		duration: 3s,
		animationDelay: 1s
	),
	chart-three: (
		svgSize: 100px,
		percentage: 75,
		strokeWidth: 13px,
		backgroundColor: $primaryColor,
		foregroundColor: $accentColor,
		labelColor: $primaryColor,
		labelFontSize: 1.8rem,
		duration: 3s,
		animationDelay: 1s
	)
);


/* ------- DO NOT EDIT BELOW --------- */
$pi: 3.14;
$labelData: '';
@for $i from 0 to 101 {
	$labelData: $labelData + $i + '%' + '\a';
}

@each $chart, $param in $configs {
	
	$c: (map-get($param, svgSize) - map-get($param, strokeWidth)) * $pi;
	$cOffSet: (map-get($param, percentage)/100)*$c;
	
	.#{$chart} {
		width: map-get($param, svgSize);
		height: map-get($param, svgSize);
		margin: 0;
		position: relative;
		
		&.animate {
			svg .circle-foreground {
				animation: offset map-get($param, duration) ease-in-out forwards;
				animation-delay: map-get($param, animationDelay);
			}
			figcaption:after {
				animation: #{$chart}-label map-get($param, duration) steps(map-get($param, percentage)) forwards;
				animation-delay: map-get($param, animationDelay);
			}
		}

		svg {
			width: 100%;
			height: 100%;
			.circle-background {
				r: (map-get($param, svgSize) - map-get($param, strokeWidth))/2;
				cx: 50%;
				cy: 50%;
				fill: none;
				stroke: map-get($param, backgroundColor);
				stroke-width: map-get($param, strokeWidth);
			}
			.circle-foreground {
				@extend .circle-background;
				stroke: map-get($param, foregroundColor);
				stroke-dasharray: $cOffSet $c;
				stroke-dashoffset: $cOffSet;
				stroke-linecap: round;
				transform-origin: 50% 50%;
				transform: rotate(-90deg);
			}
		}
  
		figcaption {
			display: inline-block;
			width: 100%;
			height: map-get($param, labelFontSize);
			overflow: hidden;
			text-align: center;
			color: map-get($param, labelColor);
			position: absolute;
			top: calc(50% - #{map-get($param, labelFontSize)/2});
			left: 0;
			font-size: 0;
			&:after {
				display: inline-block;
				content: $labelData;
				white-space: pre;
				font-size: map-get($param, labelFontSize);
				line-height: map-get($param, labelFontSize);
			}
		}
	}
	@keyframes #{$chart}-label {
		100% {
			transform: translateY(map-get($param, labelFontSize) * (-(map-get($param, percentage))));
		}
	}
}
@keyframes offset {
	100% {
		stroke-dashoffset: 0;
	}
}


/* codepen styling only */
@import url(https://fonts.googleapis.com/css?family=Abel);
body {
	background: #272b31;
	height: 100vh;
	display: flex;
	align-items: center;
	justify-content: center;
}
figure {
	margin: 1rem!important;
}
figcaption {
	font-family: 'Abel', sans-serif;
}

// HERE RIGHT STYLE //
.circular-chart {
  display: block;
  margin: 10px auto;
  max-width: 50%;
  max-height: 150px;
}

.circle {
  fill: none;
  stroke-width: 3;
  stroke-linecap: round;
  animation: progress 1.5s ease-out forwards;
}

.circle-danger {
	stroke:rgb(228, 77, 37);
}
.circle-warning {
	stroke:rgb(207, 192, 187);
}
.circle-success {
	stroke:#4CC790;
}

@keyframes progress {
  0% {
    stroke-dasharray: 0 100;
  }
}

.svg-container {
	// border: 1px solid red;

	.percentage-text {
		font-size: 0.6rem;
	}
}
